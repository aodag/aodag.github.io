<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on aodag6</title>
    <link>https://aodag.github.io/post/</link>
    <description>Recent content in Posts on aodag6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Dec 2018 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://aodag.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>作業中に聞く好きなギタリストのプレイリスト</title>
      <link>https://aodag.github.io/post/advent-2018/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0900</pubDate>
      
      <guid>https://aodag.github.io/post/advent-2018/</guid>
      <description>作業中に聞く音楽 みなさん作業中は音楽を聴くほうですか？ 私は作業に集中したいときは音楽を聴くほうです。日本語歌詞入りだとさすがに意識がそちらに行ってしまうので、インストか洋楽中心ですが。
というわけでさくっとプレイリスト
 なんとなく好きなギタリストで1曲ずつ選んでみたプレイリストです。
 Andy Timmons Mike Stern Steve Morse Eric Johnson Steve Vai Randy Rhodes Chris Impellitteri Nuno Bettencourt  2018年 そういえばこれは pyspa Advent Calendar 2018 の　8日目なのです。 今年のできごとをば。
 今年はあまり変わったこともないな、引っ越しも転職もしてないし Plone Conferenceで英語ボロボロだったので、オンライン英会話を始めたところ  ということで2019年も、よろしくおねがいします。
明日はikeの番です。</description>
    </item>
    
    <item>
      <title>Xamarinを始めてみよう</title>
      <link>https://aodag.github.io/post/jxug-adent-2016/</link>
      <pubDate>Tue, 20 Dec 2016 18:51:09 +0900</pubDate>
      
      <guid>https://aodag.github.io/post/jxug-adent-2016/</guid>
      <description>[初心者さん・学生さん大歓迎！] Xamarin その2 Advent Calendar 2016 の20日目です。
,(´_・ω・)_はい。始めてみることにしました。 初心者向けのアドベントカレンダーにエントリしてしまいましたが、そもそも僕自身初心者です。
環境とか なんとなくLinuxでやり始めて、xamarin-androidのビルドを試しましたが、PCLのなんかの参照がないとかで調査に時間かかりそうなので断念。 Macなんて持ってないのでWindowsでやってみます。
Visual Studio 2015にXamarinプラットフォーム入れました。
xamarin への期待 仕事でどうこうなどではないしMacもiOSもないので、やりたいことといったらAndroidアプリをC#で書けるということ。 あとIS12TとかMADSMAとかなぜか持ってるので、こいつらをなんかしら活用するためにwindows phoneとかuwpとかのアプリも作りたいなと。
始める前に調べてみたもの WPFとかまあ多少いじったこともあるのでXAMLとかBindingあたりはまあいいかと思いつつ
 アーキテクチャっぽいところはMVVMが鉄板のよう Prism とか Unity とか使うと楽できる behaviorも使えるらしいのでUIの制御はこちらでいろいろやればよさそう Azure Mobile Appsに接続するライブラリとか認証までできるらしいのでクラウドにつなぐときはそこらへん使えばいいはず Nunit-lightとかテストツールも問題なさそう  やってみた とりあえずありがちなTodoリストアプリでもやってみよう。 Prismとか導入前にいったん手作業でMVVMを組んでみる。
System.ComponentModel.INotifyPropertyChanged を実装して、プロパティのsetterで PropertyChanged イベントを発生させるとか、 ObservableCollection を使うのはかわってない。 ICommand の実装が Xamarin.Forms に用意されてるのは便利。Prismにも用意されてるのかな。
Loaded イベントっぽいものが見つけられなかったので、 DataContext にVM渡すタイミングがわからず。ひとまずXamlの中でリソースとして作成する方法にした。
実際触り始めたのが今日(2016/12/20)なので、データベースやネットワークまでは手が届かず。(´・ω・｀) 時間をとってじっくり触ったのが半日だけ、UI以外のとこほとんどわからないままという状況に。
とりあえずやってみた感触 ,(´・ω・) WPF触ったとき、こんなんだったよなーという感じで書いてみて動いたので変わらず使えるMVVMアーキテクチャにはほっとします。 ただ、xamarin.formsと周辺ライブラリのバージョンコンフリクトにはまり、二回ほどプロジェクト作り直したので、そういう状況になってからのうまい復旧方法を知っておきたいと思いました。 （まあこの手の問題はどこでも同じだろうと思いますが）
やりたいこと ,(´_・ω・)_　UI以外触らないといけないですよね。
 ローカルデータベース使う とりあえず Azure Mobile App と接続する Android Wearから音声入力など試したい  明日 21日目は nia_tn1012さんです。</description>
    </item>
    
    <item>
      <title>紅茶を飲もう</title>
      <link>https://aodag.github.io/post/advent-2016/</link>
      <pubDate>Fri, 09 Dec 2016 20:31:48 +0900</pubDate>
      
      <guid>https://aodag.github.io/post/advent-2016/</guid>
      <description>紅茶を飲もう 今年は紅茶をまともに入れて飲むようになりました。 ,(´_・ω・)_ということでミルクティーいれます！
お道具 紅茶セットである。
ルシピアで購入したティーポット。せっかくなのでボーンチャイナのもので。
抽出用のポット。軟水は濃くなりがちということでこちらで抽出したら茶葉をとりのぞいてさっきの白いほうにうつす。
ティーカップとスプーン。ティーカップはティーポットと一緒にルシピアで購入。
紅茶。家の近くのG-Crefで。アールグレイのFBOP。
紅茶の等級 ,(´・ω・) G-Crefは農場単位でパックしてたりするセレクトティーショップだそうな。 同じ種類の葉でも何種類もおいてあるので、等級だけは読めるようになりました。
だいたい長くなると高い等級らしいです。 SFTGFOPだと、スーパーフィナーティッピーゴールデンフラワリーオレンジペコーだとか。
紅茶いれます だいたい1回で２杯分くらいいれます。 キャディースプーンでちょい盛り2杯の葉っぱを300mlでいれてミルクティーにします。
お湯を注ぐ。勢い強めで。
3～5分くらい抽出
その間に、お茶請けなど。MOONLIGHTはサクサクしてておいしいです。（あと名前がなんかかっこいい)
そろそろミルクを用意。低脂肪などに逃げてはいけません。
なんとなく通っぽい感じでミルクインファースト(MIF)にします。
お茶できました。ベルガモットが香る。
茶こしで葉っぱをぬいて、ティーポットに移し替えます。
そして、注ぐ！
MOONLIGHTと一緒にいただきます。
,(´_・ω・)_あったまるわぁ～
2016年 そういえばこれは pyspa Advent Calendar 2016 の　9日目なのです。 今年のできごとをば。
 引っ越しました 転職しました  ということで2017年も、よろしくおねがいします。
明日はtsuyukiの親分です。</description>
    </item>
    
    <item>
      <title>ASP.NET Core MVC を Linuxで使ってみよう</title>
      <link>https://aodag.github.io/post/aspnet-mvc-linux/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://aodag.github.io/post/aspnet-mvc-linux/</guid>
      <description>アドレス帳アプリケーションの作成 前回、とりあえず ASP.NET Core を Linux上で動かせたので、 ASP.NET Core MVC と EntityFramework Core を使って簡単な Web+DBアプリケーションを作成してみます。 あまり Linux 固有の話はありません。
アドレス帳プロジェクトを作る generator-aspnet には、 ASP.NET Core Mvc 設定済のプロジェクトを生成するジェネレータも用意されていますが、学習のため Empty Web Application から初めていきます。
$ yo aspnet ? What type of application do you want to create? Empty Web Application ? What&#39;s the name of your ASP.NET application? Addressbook $ cd Addressbook $ dotnet restore  プロジェクトを生成したら、そのディレクトリに移動して dotnet restore まで実行しておきます。
MVCを使う準備 ASP.NET Core MVC を使うには、まず project.</description>
    </item>
    
    <item>
      <title>dotnet on linux</title>
      <link>https://aodag.github.io/post/dotnet-on-linux/</link>
      <pubDate>Tue, 05 Jul 2016 00:09:14 +0900</pubDate>
      
      <guid>https://aodag.github.io/post/dotnet-on-linux/</guid>
      <description>Linuxで .NET Core .NET Core が 1.0.0 リリースされたのでLinuxで使ってみます。 とりあえずツールのインストールと ASP.NET Core を動かすまで。
インストールするもの とりあえずの開発をするのに必要そうなツールも一緒にインストールします。
 .NET Core SDK Visual Studio Code  omnisharp  yo  aspnet-generator   インストール 最初に、 .NET Core を動かすために必要なライブラリをインストールしておきます。 Dockerfile を参考に依存ライブラリをインストールしておきましょう。
.NET Core は Ubuntuも正式サポートされているので、 .NET Core のダウンロードページからインストールできます。 リポジトリを追加してインストールするというppaな感じです。
dotnet-dev-1.0.0-preview-2-*** とパッケージが複数存在しているので重複してインストールしてしまうとおかしな挙動になります。 このあたりのスクリプトを使って、きっちり他のバージョンをアンインストールするようにしましょう。
Visual Studio Code も debパッケージが用意されています。 リリースページから最新のdebをダウンロードしてインストールしましょう。 また、Omnisharpを使ったC#用の拡張が用意されているので、 VS Code 内で Extensions: Install Extension を実行してインストールします。
.NET Core の SDK のプロジェクトテンプレートは貧弱なので、 yo の aspnet-generator を用意しておきましょう。</description>
    </item>
    
    <item>
      <title>ブログ引っ越しました</title>
      <link>https://aodag.github.io/post/first/</link>
      <pubDate>Wed, 30 Dec 2015 21:34:41 +0900</pubDate>
      
      <guid>https://aodag.github.io/post/first/</guid>
      <description> これまでのブログ  はてな Blogger PostHaven Pelican qiita  </description>
    </item>
    
  </channel>
</rss>